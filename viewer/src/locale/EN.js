"use strict";

(function ( exports ) {

	exports.DocBlockViewer.Locale.EN = {
		str: {
			app: {
				title: 'Documentation',
				subtitle: 'Generated by jsdocgen',
				loading: 'Loading...'
			},
			docblockviewer: {
				header: {
					subtitle: {
						'class': 'Class',
						'trait': 'Trait',
						'interface': 'Interface',
						'function': 'Function',
						'file': 'File',
						'const': 'Constant',
						'var': 'Property',
						'method': 'Method'
					}
				},
				sidebar: {
					symbols: {
						'class': 'Classes',
						'trait': 'Traits',
						'interface': 'Interfaces',
						'function': 'Functions',
						'file': 'Files',
						'const': 'Constants',
						'var': 'Properties',
						'method': 'Methods'
					},
					contents: 'Contents',
					packages: 'Packages',
					namespaces: 'Namespaces',
				},
				renderer: {
					'summary': 'Summary',
					'attributes': 'Attributes',
					'syntax': 'Syntax',
					'remarks': 'Remarks',
					'inherited-types': 'Inherited types',
					'derived-types': 'Derived types',
					'const': '{str.docblockviewer.sidebar.symbols.const}',
					'var': '{str.docblockviewer.sidebar.symbols.var}',
					'method': '{str.docblockviewer.sidebar.symbols.method}',
					'name': 'Name',
					'seealso': 'See also',
					'deprecated': 'Deprecated',
					'vartype': 'Type',
					'varvalue': 'Default',
					'constvalue': 'Value',
					'arguments': 'Arguments',
					'vaarg': 'This {1} accepts variable number of arguments.',
					'throws': 'Throws',
					'returns': 'Return value',
					'inherited': 'inherited',
					'inheritedfrom': 'Inherited from {1}',
					'meta': 'Meta',
					 'autoinheritdoc': 'Docs origin',
					 'copyright': 'Copyright',
					 'license': 'License',
					 'author': 'Author',
					 'author-inherited': 'Author ({1})',
					 'namespace': 'Namespace',
					 'file': 'File',
					 'package': 'Package'
				}
			}
		}
	};

})(this);